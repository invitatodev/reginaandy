{"version":3,"sources":["webpack://gatsby-starter-hello-world/./node_modules/@invitato/helpers/dist/isDevelopmentMode.js","webpack://gatsby-starter-hello-world/./src/hooks/useGuestData.js","webpack://gatsby-starter-hello-world/./src/components/Common/QRCard/index.js","webpack://gatsby-starter-hello-world/./src/pages/generate-qr.js"],"names":["exports","window","location","href","includes","error","console","log","isCetak","data","guest","i","is_cetak","loading","refetch","QRCard","name","code","desc","shift","value","size","marginTop","align","textOverflow","overflow","whiteSpace","fontSize","getShiftTime","React","GenerateQRPage","useGuestData","useState","isMounted","setIsMounted","currentPage","setCurrentPage","useEffect","isDevelopmentMode","DISABLED_QR_GENERATOR_IN_PRODUCTION","maxWidth","minChildWidth","spacing","PAGE","filter","_","index","map","key","renderContent","onClick","height","thickness","speed","emptyColor","color","margin"],"mappings":"0IAsBAA,EAAQ,EAZR,WACE,IACE,QAA+B,IAApBC,OAAOC,UACZD,OAAOC,SAASC,KAAKC,SAAS,eAAgB,OAAO,EAE3D,MAAOC,GACPC,QAAQC,IAAI,uBAGd,OAAO,I,gDCXT,IANA,SAAsBC,GAGpB,YAHqC,IAAjBA,OAAU,GAGvB,CAAEC,KAFSD,EAAUE,UAAa,SAACC,GAAD,MAAsB,SAAfA,EAAEC,YAAuBF,EAE/CG,SAAS,EAAOC,QAAS,gB,yJCErD,SAASC,EAAT,GAA8C,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAElC,OACE,QAAC,KAAD,MACE,QAAC,KAAD,MACE,QAAC,KAAD,MACE,QAAC,IAAD,CAAQC,MAAOH,EAAMI,KAAM,SAG/B,QAAC,KAAD,CAAKC,UAAU,QACb,QAAC,KAAD,CACEC,MAAM,SACNC,aAAa,WACbC,SAAS,SACTC,WAAW,SACXC,SAAS,QAERX,IAEH,QAAC,KAAD,CAAMO,MAAM,SAASI,SAAS,OAAOH,aAAa,WAAWC,SAAS,SAASC,WAAW,UAA1F,SACYP,EADZ,MACsBS,OAAaT,GADnC,MAGA,QAAC,KAAD,CAAMI,MAAM,SAASI,SAAS,OAAOH,aAAa,WAAWC,SAAS,SAASC,WAAW,UAA1F,IACMR,GAAQ,QActB,MAAeW,OAAWd,G,6BCpCX,SAASe,IACtB,IAEA,GAA0BC,QAAa,GAA/BtB,EAAR,EAAQA,KAAMI,EAAd,EAAcA,QACd,GAAkCmB,eAAS,GAApCC,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,cAAS,GAAxCG,EAAP,KAAoBC,EAApB,KAkCA,OANAC,gBAAU,WACHJ,GACHC,GAAa,KAEd,IAEED,EAeDA,KAAcK,UAAuBC,MAChC,QAAC,KAAD,uCAIP,QAAC,KAAD,CAAKC,SAAS,WACZ,QAAC,KAAD,CAAYC,cAAc,QAAQC,QAAQ,QArDxB,WACpB,GAAI7B,EAAS,OAAO,wCACpB,IAAM8B,EAAOR,EAOb,OALkB1B,EAAKmC,QAAO,SAACC,EAAGC,GAEhC,OADeA,EAXC,GAWqBH,GAAQG,GAX7B,IAWqDH,EAAO,MAI7DI,KAAI,SAACrC,EAAOoC,GAK3B,OAJIA,EAAQ,KACVxC,QAAQC,IAAI,iCAIZ,QAAC,EAAD,CACEyC,IAAKtC,EAAMO,KACXD,KAAMN,EAAMM,KACZC,KAAMP,EAAMO,KACZC,KAAMR,EAAMQ,KACZC,MAAOT,EAAMS,WAkCd8B,KAEH,QAAC,KAAD,CACE3B,UAAU,OACV4B,QAAS,kBAAMd,EAAe,EAAID,KAFpC,kBAGoBA,KAzBpB,QAAC,KAAD,CAAQgB,OAAO,UACb,QAAC,IAAD,CACEC,UAAU,MACVC,MAAM,QACNC,WAAW,WACXC,MAAM,gBACNlC,KAAK,KACLmC,OAAO","file":"component---src-pages-generate-qr-js-a19600329a91ac3f15e7.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Function to check is Development Mode or Not\n * @return {boolean}\n */\n\nfunction isDevelopment() {\n  try {\n    if (typeof window.location !== 'undefined') {\n      if (window.location.href.includes('//localhost')) return true;\n    }\n  } catch (error) {\n    console.log('ERR_WHEN_ACCESS_DOM');\n  }\n\n  return false;\n}\n\nexports.default = isDevelopment;","import guest from '../api/guest-data.json';\n\nfunction useGuestData(isCetak = false) {\n  const finalData = isCetak ? guest.filter((i) => i.is_cetak === 'TRUE') : guest;\n\n  return { data: finalData, loading: false, refetch: () => {} };\n}\n\nexport default useGuestData;\n","import React from 'react';\nimport QRCode from 'react-qr-code';\nimport { string } from 'prop-types';\n\nimport { Box, Text, Center } from '@chakra-ui/react';\nimport { getShiftTime } from '@hooks/useShiftTime';\n\nfunction QRCard({ name, code, desc, shift }) {\n\n  return (\n    <Box>\n      <Box>\n        <Center>\n          <QRCode value={code} size={140} />\n        </Center>\n      </Box>\n      <Box marginTop=\"8px\">\n        <Text\n          align=\"center\"\n          textOverflow=\"ellipsis\"\n          overflow=\"hidden\"\n          whiteSpace=\"nowrap\"\n          fontSize=\"10px\"\n        >\n          {name}\n        </Text>\n        <Text align=\"center\" fontSize=\"10px\" textOverflow=\"ellipsis\" overflow=\"hidden\" whiteSpace=\"nowrap\">\n          {`Shift ${shift} (${getShiftTime(shift)})`}\n        </Text>\n        <Text align=\"center\" fontSize=\"10px\" textOverflow=\"ellipsis\" overflow=\"hidden\" whiteSpace=\"nowrap\">\n          {`${desc || '-'}`}\n        </Text>\n      </Box>\n    </Box>\n  );\n}\n\nQRCard.propTypes = {\n  name: string.isRequired,\n  desc: string.isRequired,\n  code: string.isRequired,\n  shift: string.isRequired,\n};\n\nexport default React.memo(QRCard);","import React, { useEffect, useState } from 'react';\nimport { Box, SimpleGrid, Spinner, Center, Button } from '@chakra-ui/react';\n\nimport QRCard from '@components/Common/QRCard';\nimport useGuestData from '@/hooks/useGuestData';\nimport isDevelopmentMode from '@invitato/helpers/dist/isDevelopmentMode';\nimport { DISABLED_QR_GENERATOR_IN_PRODUCTION } from '@/constants/feature-flags';\n\nexport default function GenerateQRPage() {\n  const QR_PER_PAGE = 56;\n\n  const { data, loading } = useGuestData(true);\n  const [isMounted, setIsMounted] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const renderContent = () => {\n    if (loading) return <div>Menyiapkan data..</div>;\n    const PAGE = currentPage;\n\n    const qrPerPage = data.filter((_, index) => {\n      const result = index < QR_PER_PAGE * PAGE && index >= QR_PER_PAGE * (PAGE - 1);\n      return result;\n    });\n\n    return qrPerPage.map((guest, index) => {\n      if (index > 1000) {\n        console.log('YOUR GUEST IS FUCKING A LOT!');\n      }\n\n      return (\n        <QRCard\n          key={guest.code}\n          name={guest.name}\n          code={guest.code}\n          desc={guest.desc}\n          shift={guest.shift}\n        />\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (!isMounted) {\n      setIsMounted(true);\n    }\n  }, []);\n\n  if (!isMounted) {\n    return (\n      <Center height=\"100vh\">\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"mainColorText\"\n          size=\"xl\"\n          margin=\"auto\"\n        />\n      </Center>\n    );\n  }\n\n  if (isMounted && !isDevelopmentMode() && DISABLED_QR_GENERATOR_IN_PRODUCTION) {\n    return <Box>Sory, this disabled by admin.</Box>;\n  }\n\n  return (\n    <Box maxWidth=\"1280px\">\n      <SimpleGrid minChildWidth=\"140px\" spacing=\"40px\">\n        {renderContent()}\n      </SimpleGrid>\n      <Button\n        marginTop=\"24px\"\n        onClick={() => setCurrentPage(1 + currentPage)}\n      >{`Current Page - ${currentPage}`}</Button>\n    </Box>\n  );\n}"],"sourceRoot":""}